package org.spring.my.service;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.spring.my.dao.BoardDAO;
import org.spring.my.dao.FileDAO;
import org.spring.my.dto.Board;
import org.spring.my.dto.Page;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.web.multipart.MultipartFile;

@Service
public class BoardServiceimpl implements BoardService{
	
	@Autowired
	private BoardDAO boarddao;
	@Autowired
	private FileService fileservice;
	@Autowired
	private FileDAO filedao;
	
	//메소드 단위로 트랜잭션 설정
	//트랜잭션으로 파일에서 에러가 나면 내용까지 인서트 막음
	@Transactional
	@Override
	public void insert(Board board) {
		//게시물 저장
		boarddao.insert(board);//인서트를 하고나면 저장 후 bnum이 셋팅완료
		
		//매퍼에게 전달할 맵
		Map<String, Object> fmap = new HashMap<>();
		
		//파일맵에 bnum저장
		fmap.put("bnum", board.getBnum());
		
		//파일이름 리스트 만들기
		List<String> filenamelist = new ArrayList<>();
		
		//board디티오의 파일 이름 저장
		List<MultipartFile> files= board.getFiles();
		//만약 files가 널이라면(파일 추가 인풋창을 다 날리면) 리턴
		//if(files == null) return ;
		
		for(MultipartFile mf :files) {
			//파일 업로드 저장
			String filename = fileservice.fileupload(mf);
			
			//파일 네임이 공백이 아닐때만 추가해라
			if(!filename.equals("")) {
				filenamelist.add(filename);
			}
		}
		//filenamelist의 사이즈가 0이면 돌아가라
		if(filenamelist.size() == 0) return ;
		fmap.put("filenamelist", filenamelist);
		//System.out.println(fmap);
		fileservice.insertboardfile(fmap);
	}

	@Override
	public List<Board> selectlist(Page page) {
		
		return boarddao.selectlist(page);
	}

}
