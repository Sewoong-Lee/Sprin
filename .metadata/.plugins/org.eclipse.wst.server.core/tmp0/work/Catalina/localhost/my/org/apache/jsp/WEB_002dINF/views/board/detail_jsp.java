/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.46
 * Generated at: 2021-07-28 06:30:27 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class detail_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(6);
    _jspx_dependants.put("/WEB-INF/views/board/../include/includefile.jsp", Long.valueOf(1627017224601L));
    _jspx_dependants.put("/WEB-INF/views/board/../include/boaeddetail.jsp", Long.valueOf(1627023553067L));
    _jspx_dependants.put("jar:file:/D:/spring/spring/source/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/sp03_board/WEB-INF/lib/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("jar:file:/D:/spring/spring/source/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/sp03_board/WEB-INF/lib/jstl-1.2.jar!/META-INF/fn.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1625140332585L));
    _jspx_dependants.put("jar:file:/D:/spring/spring/source/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/sp03_board/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005fpattern_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005fpattern_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005fpattern_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- contextpath 변수 생성 -->\r\n");
      if (_jspx_meth_c_005fset_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.js\"></script>\r\n");
      out.write("<!-- <script src=\"https://kit.fontawesome.com/5bbe282217.js\" crossorigin=\"anonymous\"></script> --><!-- 폰트어썸 -->\r\n");
      out.write("<!-- 리소스폴더의 css파일 -->\r\n");
      out.write("<link href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/style.css\" rel=\"stylesheet\" type=\"text/css\"><!-- 리소스폴더의 css파일 -->\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<!-- 댓글 리스트 템플릿 -->\r\n");
      out.write("<script src=\"https://cdnjs.cloudflare.com/ajax/libs/handlebars.js/4.7.7/handlebars.min.js\"></script>\r\n");
      out.write("<!-- 댓글 탬플릿 소스 -->\r\n");
      out.write("<script id=\"replylist_template\" type=\"text/x-handlebars-template\">\r\n");
      out.write("	{{#each .}}\r\n");
      out.write("     <table>\r\n");
      out.write("		<hr>\r\n");
      out.write("		<table border=\"1\" id=\"rep{{RNUM}}\">\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td colspan=\"2\">\r\n");
      out.write("				라이크구분:<span class=\"likegubun\">{{LIKEGUBUN}}</span>\r\n");
      out.write("				<button class=\"btnreplike\">좋아요</button> : <span class=\"replikecnt\">{{LIKECNT}}</span>\r\n");
      out.write("				<button class=\"btnreptislike\">싫어요</button> : <span class=\"repdislikecnt\">{{DISLIKECNT}}</span>\r\n");
      out.write("			</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<th>작성자</th>\r\n");
      out.write("			<td><input type=\"text\" class=\"repuserid\" readonly value=\"{{USERID}}\"></td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<th>내용</th>\r\n");
      out.write("			<td><textarea rows=\"3\" cols=\"20\" id=\"repcontent{{rnum}}\">{{CONTENT}}</textarea></td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<th>등록일자</th>\r\n");
      out.write("			<td>{{#formatDate REGDATE}}{{/formatDate}}</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<th>수정일자</th>\r\n");
      out.write("			<td>{{#formatDate MODIFYDATE}}{{/formatDate}}</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td colspan=\"4\" align=\"center\"> \r\n");
      out.write("				<input type=\"hidden\" class=\"rnum\" value=\"{{RNUM}}\">\r\n");
      out.write("				<input type=\"hidden\" class=\"restep\" value=\"{{RESTEP}}\">\r\n");
      out.write("				<input type=\"hidden\" class=\"relevel\" value=\"{{RELEVEL}}\">\r\n");
      out.write("				\r\n");
      out.write("				{{#sessionCheck USERID}}				\r\n");
      out.write("				{{/sessionCheck}}\r\n");
      out.write("				<button class=\"btnrepadd\">댓글</button>\r\n");
      out.write("			</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("     </table>\r\n");
      out.write("     {{/each}}\r\n");
      out.write("</script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("//헬퍼 작성(작성자만 수정 삭제 버튼 보이게)\r\n");
      out.write("//세션id와 작성자 id가 같은지 체크(같을때만 버튼을 리턴)\r\n");
      out.write("//sessionCheck : 헬퍼(함수)의 이름\r\n");
      out.write("//userid : 반복문 돌며 읽은 유저아이디\r\n");
      out.write("	Handlebars.registerHelper('sessionCheck', function(userid){\r\n");
      out.write("		var loginuserid = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.userid}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\r\n");
      out.write("		if (loginuserid == userid){\r\n");
      out.write("			//{{userid}} 로 넣으면 문자 자체로 인식해서 변수의 아이디를 넣음\r\n");
      out.write("			return '<button class =\"btnrepupdate\" value=\"'+userid+'\">수정</button> ' +\r\n");
      out.write("					'<button class=\"btnrepdelete\" value=\"'+userid+'\">삭제</button>';\r\n");
      out.write("		}\r\n");
      out.write("		return '';\r\n");
      out.write("\r\n");
      out.write("		\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	//댓글의 날짜 형식 교체\r\n");
      out.write("	Handlebars.registerHelper('formatDate', function(date) {\r\n");
      out.write("		return new Date(date).toString('yyyy-MM-dd');\r\n");
      out.write("	});\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("//좋아요 싫어요 버튼 제어 및 텍스트 변경\r\n");
      out.write("var likegubun = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${bfmap.board.LIKEGUBUN}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\r\n");
      out.write("var sessionuserid = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.userid}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\r\n");
      out.write("\r\n");
      out.write("function statechange() {\r\n");
      out.write("	if(likegubun == '0'){\r\n");
      out.write("		$('#btnlike').text('좋아요');\r\n");
      out.write("		$('#btntislike').text('싫어요');\r\n");
      out.write("	}else if(likegubun == '1'){ // 좋아요 선택\r\n");
      out.write("		$('#btnlike').text('좋아요 취소');\r\n");
      out.write("		$('#btntislike').text('싫어요');\r\n");
      out.write("	}else if(likegubun == '2'){\r\n");
      out.write("		$('#btnlike').text('좋아요');\r\n");
      out.write("		$('#btntislike').text('싫어요 취소');\r\n");
      out.write("	};\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("//댓글 삭제 수정 버튼 제어 (나중에...)\r\n");
      out.write("function buttonchange(userid) {\r\n");
      out.write("	if(sessionuserid == userid){\r\n");
      out.write("		$('.btnrepdelete').hide();\r\n");
      out.write("		$('.btnrepupdate').hide();\r\n");
      out.write("	}else{\r\n");
      out.write("		$('.btnrepdelete').show();\r\n");
      out.write("		$('.btnrepupdate').show();\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("$(function() {\r\n");
      out.write("	//게시물 처리\r\n");
      out.write("	//좋아요 버튼을 클릭 했다면\r\n");
      out.write("	$('#btnlike').click(function() {\r\n");
      out.write("		alert(likegubun);\r\n");
      out.write("		if(likegubun == '0'){ //조회 상태일때만 좋아요/싫어요 가능\r\n");
      out.write("			//좋아요 처리\r\n");
      out.write("			//alert('좋아요');\r\n");
      out.write("			var bnum = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${bfmap.board.BNUM}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\r\n");
      out.write("			console.log(bnum);\r\n");
      out.write("			\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				url: '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/board/like/'+bnum,\r\n");
      out.write("				type: 'get',\r\n");
      out.write("				dataType: 'text',\r\n");
      out.write("				success: function(data){\r\n");
      out.write("					likegubun = '1'; //좋아요 상태로 변경\r\n");
      out.write("					//alert(data);\r\n");
      out.write("					statechange(); //버튼상태 변경\r\n");
      out.write("					//좋아요 +1\r\n");
      out.write("					$('#likecnt').text(parseInt($('#likecnt').text()) + 1); \r\n");
      out.write("				},\r\n");
      out.write("				error: function(err){\r\n");
      out.write("					console.log(err);\r\n");
      out.write("					alert('실패');\r\n");
      out.write("				}\r\n");
      out.write("			});\r\n");
      out.write("		}else if(likegubun == '1'){ //좋아요 상태일때\r\n");
      out.write("			//좋아요 취소 처리\r\n");
      out.write("			//좋아요 취소 처리\r\n");
      out.write("			var bnum = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${bfmap.board.BNUM}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\r\n");
      out.write("			console.log(bnum);\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				url:'");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/board/likecancel/'+bnum,\r\n");
      out.write("				type:'get',\r\n");
      out.write("				dataType:'text',\r\n");
      out.write("				success : function(data){\r\n");
      out.write("					state = '0'; //좋아요 상태\r\n");
      out.write("					statechange(); //버튼상태 변경\r\n");
      out.write("					//좋아요 수 - 1\r\n");
      out.write("					$('#likecnt').text(parseInt($('#likecnt').text()) - 1); \r\n");
      out.write("					\r\n");
      out.write("				},\r\n");
      out.write("				error:function(err){\r\n");
      out.write("					console.log(err);\r\n");
      out.write("					alert('실패');\r\n");
      out.write("				}\r\n");
      out.write("			});\r\n");
      out.write("			\r\n");
      out.write("		}else if(likegubun == '2'){ //싫어요 취소 진행 메세지\r\n");
      out.write("			alert('싫어요 취소 후 가능');\r\n");
      out.write("		}\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	//싫어요 버튼을 눌렀을때\r\n");
      out.write("	$('#btntislike').click(function() {\r\n");
      out.write("		alert('싫어요');\r\n");
      out.write("		if(likegubun == '0'){\r\n");
      out.write("			//싫어요 처리\r\n");
      out.write("			var bnum = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${bfmap.board.BNUM}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\r\n");
      out.write("			console.log(bnum);\r\n");
      out.write("			\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				url: '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/board/dislike/'+bnum,\r\n");
      out.write("				type: 'get',\r\n");
      out.write("				dataType: 'text',\r\n");
      out.write("				success: function(data){\r\n");
      out.write("					likegubun = '2'; //싫어요 상태로 변경\r\n");
      out.write("					//alert(data);\r\n");
      out.write("					statechange(); //버튼상태 변경\r\n");
      out.write("					//싫어요 +1\r\n");
      out.write("					$('#dislikecnt').text(parseInt($('#dislikecnt').text()) + 1); \r\n");
      out.write("				},\r\n");
      out.write("				error: function(err){\r\n");
      out.write("					console.log(err);\r\n");
      out.write("					alert('실패');\r\n");
      out.write("				}\r\n");
      out.write("			});\r\n");
      out.write("		}else if(likegubun == '2'){ //싫어요 상태일때\r\n");
      out.write("			//싫어요 취소 처리\r\n");
      out.write("			var bnum = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${bfmap.board.BNUM}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\r\n");
      out.write("			console.log(bnum);\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				url:'");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/board/dislikecancel/'+bnum,\r\n");
      out.write("				type:'get',\r\n");
      out.write("				dataType:'text',\r\n");
      out.write("				success : function(data){\r\n");
      out.write("					state = '0'; //조회 상태\r\n");
      out.write("					statechange(); //버튼상태 변경\r\n");
      out.write("					//싫어요 수 - 1\r\n");
      out.write("					$('#dislikecnt').text(parseInt($('#dislikecnt').text()) - 1); \r\n");
      out.write("					\r\n");
      out.write("				},\r\n");
      out.write("				error:function(err){\r\n");
      out.write("					console.log(err);\r\n");
      out.write("					alert('실패');\r\n");
      out.write("				}\r\n");
      out.write("			});\r\n");
      out.write("		}else if(likegubun == '1'){ //싫어요 취소 진행 메세지\r\n");
      out.write("			alert('좋아요 취소 후 가능');\r\n");
      out.write("		}\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	//원본글 삭제 버튼을 클릭 했을때\r\n");
      out.write("	$('#btndelete').click(function() {\r\n");
      out.write("		var userid = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${bfmap.board.USERID}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\r\n");
      out.write("		//삭제 권한 체크\r\n");
      out.write("		if('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.userid}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("' != userid){\r\n");
      out.write("			alert('삭제 권한 없음');\r\n");
      out.write("			return;\r\n");
      out.write("		};\r\n");
      out.write("		// 삭제 처리\r\n");
      out.write("		location.href='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/board/delete?bnum=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${bfmap.board.BNUM}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';	\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	//게시물 수정\r\n");
      out.write("	//원본글의 수정 버튼을 클릭 했을때\r\n");
      out.write("	$('#btnupdateform').click(function() {\r\n");
      out.write("		var userid = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${bfmap.board.USERID}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\r\n");
      out.write("		//삭제 권한 체크\r\n");
      out.write("		if('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.userid}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("' != userid){\r\n");
      out.write("			alert('삭제 권한 없음');\r\n");
      out.write("			return;\r\n");
      out.write("		};\r\n");
      out.write("		// 삭제 처리\r\n");
      out.write("		location.href='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/board/modify?bnum=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${bfmap.board.BNUM}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';	\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	//(리스트로 가즈아 버튼 클릭시) 조회폼으로 이동\r\n");
      out.write("	$('#btnlistmove').click(function() {\r\n");
      out.write("		location.href='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/board/list';	\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	//***************************************************************************************\r\n");
      out.write("	\r\n");
      out.write("//댓글 처리\r\n");
      out.write("//댓글 저장\r\n");
      out.write("//댓글 추가버튼을 클릭 했을때\r\n");
      out.write("$('#btnrepsave').click(function() {\r\n");
      out.write("	var bnum = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${bfmap.board.BNUM}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(";\r\n");
      out.write("	var content = $('#repcontent').val();\r\n");
      out.write("	var restep = $('#restep').val();\r\n");
      out.write("	var relevel = $('#relevel').val();\r\n");
      out.write("	console.log(bnum+'  '+repcontent+'  '+restep+'  '+relevel);\r\n");
      out.write("	\r\n");
      out.write("	//댓글 div를 이동 (댓글 리스트를 뿌릴때 댓글창은 사라짐)\r\n");
      out.write("	$('#replyadd').insertAfter('#rep0');\r\n");
      out.write("	$('#replyadd').hide();\r\n");
      out.write("	\r\n");
      out.write("	$.ajax({\r\n");
      out.write("		url:'");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/reply/',  //restfull하게 설계\r\n");
      out.write("		type:'post',  //메소드 방식\r\n");
      out.write("		contentType:'application/json',  //보내는 데이터 타입\r\n");
      out.write("		data:JSON.stringify({bnum,content,restep,relevel}),  //보낼 데이터\r\n");
      out.write("		//dataType:'json', //서버에서 받는 타입\r\n");
      out.write("		dataType:'text', //서버에서 받는 타입\r\n");
      out.write("		success:function(data){\r\n");
      out.write("			console.log(data);\r\n");
      out.write("			//댓글 리스트 조회(아래 댓글리스트 조회 템플릿 펑션)\r\n");
      out.write("			//템플릿 소스 가져오기\r\n");
      out.write("			replylist();\r\n");
      out.write("			\r\n");
      out.write("		},\r\n");
      out.write("		error:function(err){\r\n");
      out.write("			console.log(err);\r\n");
      out.write("			alert('실패');\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("	});\r\n");
      out.write("});\r\n");
      out.write("//댓글리스트 조회\r\n");
      out.write("function replylist() {\r\n");
      out.write("\r\n");
      out.write("	var bnum = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${bfmap.board.BNUM}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(";\r\n");
      out.write("	\r\n");
      out.write("	$.ajax({\r\n");
      out.write("		url:'");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/reply/list/'+bnum,  //restfull하게 설계\r\n");
      out.write("		type:'get',  //메소드 방식\r\n");
      out.write("		dataType:'json', //서버에서 받는 타입\r\n");
      out.write("		success:function(data){\r\n");
      out.write("			console.log(data);\r\n");
      out.write("			//댓글리스트 탬플릿을 이용해서 추가\r\n");
      out.write("			var source = $('#replylist_template').html();\r\n");
      out.write("			var template = Handlebars.compile(source);\r\n");
      out.write("	        $('#replist').html(template(data));\r\n");
      out.write("		},\r\n");
      out.write("		error:function(err){\r\n");
      out.write("			console.log(err);\r\n");
      out.write("			alert('실패');\r\n");
      out.write("		}\r\n");
      out.write("	});\r\n");
      out.write("};\r\n");
      out.write("//댓글 추가 이동\r\n");
      out.write("function repymove(restep, relevel, eleId) {\r\n");
      out.write("	$('#replyadd').show(); //댓글 폼 보이게\r\n");
      out.write("	$('#restep').val(restep);\r\n");
      out.write("	$('#relevel').val(relevel);\r\n");
      out.write("	$('#repcontent').val('');\r\n");
      out.write("	//댓글 추가 이동\r\n");
      out.write("	$('#replyadd').insertAfter(eleId);  //댓글 폼 이동 위치 받고 이동\r\n");
      out.write("};\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("//댓글 버튼을 클릭 했을때\r\n");
      out.write("//동적으로 생성된 엘리멘트에 이벤트 달기\r\n");
      out.write("$('#replist').on('click','.btnrepadd',function(){\r\n");
      out.write("	//alert('댓글 클');\r\n");
      out.write("	var restep = $(this).parent().find('.restep').val();\r\n");
      out.write("	var relevel = $(this).parent().find('.relevel').val();\r\n");
      out.write("	var rnum = $(this).parent().find('.rnum').val();\r\n");
      out.write("	console.log(rnum);\r\n");
      out.write("	\r\n");
      out.write("	$('#restep').val(restep);\r\n");
      out.write("	$('#relevel').val(relevel);\r\n");
      out.write("	\r\n");
      out.write("	//댓글 추가 이동\r\n");
      out.write("	//alert(restep +' '+ relevel +' '+ 'rep'+rnum);\r\n");
      out.write("	repymove(restep, relevel, '#rep'+rnum);\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("//원본의 댓글을 클릭 했을때 (0,0 으로 고정)\r\n");
      out.write("$('#btnrepadd').click(function(){\r\n");
      out.write("	//$('#restep').val(0);\r\n");
      out.write("	//$('#relevel').val(0);\r\n");
      out.write("	repymove(0, 0, \"#rep0\");\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("//댓글의 취소 버튼을 클릭했을때 하이드 하기\r\n");
      out.write("$('#btnrepreset').click(function () {\r\n");
      out.write("	$('#replyadd').hide();\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("//댓글 수정\r\n");
      out.write("$('#replist').on('click','.btnrepupdate',function(){\r\n");
      out.write("	//var content = $(this).parent().parent().parent().find('.repcontent').val();\r\n");
      out.write("	var userid = $(this).val();\r\n");
      out.write("	//alert(userid);\r\n");
      out.write("	//권한 체그\r\n");
      out.write("	if('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.userid}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("' != userid){\r\n");
      out.write("		alert('작성자와 달라요');\r\n");
      out.write("		return;\r\n");
      out.write("	};\r\n");
      out.write("	var rnum = $(this).parent().find('.rnum').val();\r\n");
      out.write("	var content = $('#repcontent'+rnum).val();\r\n");
      out.write("	//alert(content);\r\n");
      out.write("	$.ajax({\r\n");
      out.write("		url:'");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/reply/'+rnum,  //restfull하게 설계\r\n");
      out.write("		type:'put',  //메소드 방식 (수정은 put)\r\n");
      out.write("		contentType:'application/json',  //보내는 데이터 타입\r\n");
      out.write("		data:JSON.stringify({rnum, content}),  //보낼 데이터\r\n");
      out.write("		//dataType:'json', //서버에서 받는 타입\r\n");
      out.write("		dataType:'text', //서버에서 받는 타입\r\n");
      out.write("		success:function(data){\r\n");
      out.write("			console.log(data);\r\n");
      out.write("			alert(data);\r\n");
      out.write("		},\r\n");
      out.write("		error:function(err){\r\n");
      out.write("			console.log(err);\r\n");
      out.write("			alert('실패');\r\n");
      out.write("		}\r\n");
      out.write("	});\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("//댓글 삭제 버튼 클릭 했을때\r\n");
      out.write("$('#replist').on('click','.btnrepdelete',function(){\r\n");
      out.write("	//var content = $(this).parent().parent().parent().find('.repcontent').val();\r\n");
      out.write("	var userid = $(this).val();\r\n");
      out.write("	//alert(userid);\r\n");
      out.write("	//삭제 권한 체크\r\n");
      out.write("	if('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.userid}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("' != userid){\r\n");
      out.write("		alert('작성자와 달라요');\r\n");
      out.write("		return;\r\n");
      out.write("	};\r\n");
      out.write("	var rnum = $(this).parent().find('.rnum').val();\r\n");
      out.write("	//alert(rnum);\r\n");
      out.write("	$.ajax({\r\n");
      out.write("		url:'");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/reply/'+rnum,  //restfull하게 설계\r\n");
      out.write("		type:'DELETE',  //삭제 메소드 방식\r\n");
      out.write("		//contentType:'application/json',  //보내는 데이터 타입\r\n");
      out.write("		//data:JSON.stringify({rnum, content}),  //보낼 데이터\r\n");
      out.write("		dataType:'text', //서버에서 받는 타입\r\n");
      out.write("		success:function(data){\r\n");
      out.write("			//console.log(data);\r\n");
      out.write("			alert(data);\r\n");
      out.write("			replylist();\r\n");
      out.write("		},\r\n");
      out.write("		error:function(err){\r\n");
      out.write("			console.log(err);\r\n");
      out.write("			alert('실패');\r\n");
      out.write("		}\r\n");
      out.write("	});\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("//댓글의 좋아요 버튼 클릭했을때(나중에)\r\n");
      out.write("$('#replist').on('click','.btnreplike',function(){\r\n");
      out.write("	var likegubun = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${bfmap.board.LIKEGUBUN}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\r\n");
      out.write("	\r\n");
      out.write("	if(likegubun == '0'){ //조회 상태일때만 좋아요/싫어요 가능\r\n");
      out.write("		//좋아요 처리\r\n");
      out.write("		//alert('좋아요');\r\n");
      out.write("		var bnum = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${bfmap.board.BNUM}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\r\n");
      out.write("		console.log(bnum);\r\n");
      out.write("		\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			url: '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/board/like/'+bnum,\r\n");
      out.write("			type: 'get',\r\n");
      out.write("			dataType: 'text',\r\n");
      out.write("			success: function(data){\r\n");
      out.write("				likegubun = '1'; //좋아요 상태로 변경\r\n");
      out.write("				//alert(data);\r\n");
      out.write("				statechange(); //버튼상태 변경\r\n");
      out.write("				//좋아요 +1\r\n");
      out.write("				$('#likecnt').text(parseInt($('#likecnt').text()) + 1); \r\n");
      out.write("			},\r\n");
      out.write("			error: function(err){\r\n");
      out.write("				console.log(err);\r\n");
      out.write("				alert('실패');\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("	}else if(likegubun == '1'){ //좋아요 상태일때\r\n");
      out.write("		//좋아요 취소 처리\r\n");
      out.write("		//좋아요 취소 처리\r\n");
      out.write("		var bnum = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${bfmap.board.BNUM}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\r\n");
      out.write("		console.log(bnum);\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			url:'");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/board/likecancel/'+bnum,\r\n");
      out.write("			type:'get',\r\n");
      out.write("			dataType:'text',\r\n");
      out.write("			success : function(data){\r\n");
      out.write("				state = '0'; //좋아요 상태\r\n");
      out.write("				statechange(); //버튼상태 변경\r\n");
      out.write("				//좋아요 수 - 1\r\n");
      out.write("				$('#likecnt').text(parseInt($('#likecnt').text()) - 1); \r\n");
      out.write("				\r\n");
      out.write("			},\r\n");
      out.write("			error:function(err){\r\n");
      out.write("				console.log(err);\r\n");
      out.write("				alert('실패');\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("	}else if(likegubun == '2'){ //싫어요 취소 진행 메세지\r\n");
      out.write("		alert('싫어요 취소 후 가능');\r\n");
      out.write("	}\r\n");
      out.write("});\r\n");
      out.write("//댓글의 싫어요 버튼 클릭했을때\r\n");
      out.write("$('#replist').on('click','.btnreptislike',function(){\r\n");
      out.write("	\r\n");
      out.write("});\r\n");
      out.write("//폼이 로딩이 완료된 후 ******************************************\r\n");
      out.write("replylist(); //댓글 리스트 불러오기\r\n");
      out.write("//buttonchange(userid); //세션 확인 후 삭제 수정버튼 제어\r\n");
      out.write("\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write(" <!-- 디테일 제이쿼리 -->\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write(" <!-- 리소스 폴더 파일 불러오기 -->\r\n");
      out.write("</head>\r\n");
      out.write("<body>	\r\n");
      out.write("	세션 ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.userid}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" <br>\r\n");
      out.write("	좋아요 구분 : ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${bfmap.board.LIKEGUBUN}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\r\n");
      out.write("	<h2>상세 조회</h2>\r\n");
      out.write("	순번 : <a >");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${bfmap.board.BNUM}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</a> <br>\r\n");
      out.write("	조회수 : ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${bfmap.board.READCNT}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" <br>\r\n");
      out.write("	<button id=\"btnlike\">좋아요</button> : <span id=\"likecnt\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${bfmap.board.LIKECNT}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</span>\r\n");
      out.write("	<button id=\"btntislike\">싫어요</button> : <span id=\"dislikecnt\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${bfmap.board.DISLIKECNT}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</span> <br>\r\n");
      out.write("	작성일 : ");
      if (_jspx_meth_fmt_005fformatDate_005f0(_jspx_page_context))
        return;
      out.write(" <br>\r\n");
      out.write("	최근수정일 : ");
      if (_jspx_meth_fmt_005fformatDate_005f1(_jspx_page_context))
        return;
      out.write(" <br>\r\n");
      out.write("	작성자 : <a >");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${bfmap.board.USERID}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</a> <br>\r\n");
      out.write("	제목 : ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${bfmap.board.SUBJECT}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" <br>\r\n");
      out.write("	\r\n");
      out.write("	내용 : \r\n");
      out.write("	<!-- 삭제라면 내용 -->\r\n");
      out.write("	");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	<!-- 삭제가 아니라면 내용 -->\r\n");
      out.write("	");
      if (_jspx_meth_c_005fif_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("	<!-- 작성자만 수정 삭제 버튼 보이게 -->\r\n");
      out.write("	");
      if (_jspx_meth_c_005fif_005f2(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("	<button id=\"btnrepadd\">댓글</button>\r\n");
      out.write("	<button id=\"btnlistmove\">리스트로 가즈아~~~~</button>\r\n");
      out.write("	<hr id=\"rep0\">\r\n");
      out.write("	<!-- 댓글 추가 -->\r\n");
      out.write("	<h3>댓글</h3>\r\n");
      out.write("	<div id=\"replyadd\" hidden>\r\n");
      out.write("		<!-- 글 순서 --><input type=\"hidden\" id=\"restep\" value=\"0\">\r\n");
      out.write("		<!-- 글 순서 --><input type=\"hidden\" id=\"relevel\" value=\"0\">\r\n");
      out.write("		작성자 : <input type=\"text\" id=\"repuserid\" readonly value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.userid}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"> <br>\r\n");
      out.write("		내용 : <textarea rows=\"3\" cols=\"20\" id=\"repcontent\"></textarea>\r\n");
      out.write("		<button id=\"btnrepsave\">저장</button>\r\n");
      out.write("		<button type=\"reset\" id=\"btnrepreset\">취소</button>\r\n");
      out.write("	</div>\r\n");
      out.write("	<!-- 댓글 리스트 -->\r\n");
      out.write("	");
      out.write("\r\n");
      out.write("	<div id=\"replist\">\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("	</div>\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f0_reused = false;
    try {
      _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f0.setParent(null);
      // /WEB-INF/views/board/../include/includefile.jsp(5,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setVar("path");
      // /WEB-INF/views/board/../include/includefile.jsp(5,0) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setValue(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/board/../include/includefile.jsp(5,0) '${pageContext.request.contextPath}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${pageContext.request.contextPath}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
      if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
      _jspx_th_c_005fset_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fformatDate_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:formatDate
    org.apache.taglibs.standard.tag.rt.fmt.FormatDateTag _jspx_th_fmt_005fformatDate_005f0 = (org.apache.taglibs.standard.tag.rt.fmt.FormatDateTag) _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005fpattern_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.FormatDateTag.class);
    boolean _jspx_th_fmt_005fformatDate_005f0_reused = false;
    try {
      _jspx_th_fmt_005fformatDate_005f0.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fformatDate_005f0.setParent(null);
      // /WEB-INF/views/board/detail.jsp(21,7) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fformatDate_005f0.setValue((java.util.Date) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${bfmap.board.REGDATE}", java.util.Date.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      // /WEB-INF/views/board/detail.jsp(21,7) name = pattern type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fformatDate_005f0.setPattern("yyyy-MM-dd HH:mm");
      int _jspx_eval_fmt_005fformatDate_005f0 = _jspx_th_fmt_005fformatDate_005f0.doStartTag();
      if (_jspx_th_fmt_005fformatDate_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005fpattern_005fnobody.reuse(_jspx_th_fmt_005fformatDate_005f0);
      _jspx_th_fmt_005fformatDate_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fformatDate_005f0, _jsp_getInstanceManager(), _jspx_th_fmt_005fformatDate_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fformatDate_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:formatDate
    org.apache.taglibs.standard.tag.rt.fmt.FormatDateTag _jspx_th_fmt_005fformatDate_005f1 = (org.apache.taglibs.standard.tag.rt.fmt.FormatDateTag) _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005fpattern_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.FormatDateTag.class);
    boolean _jspx_th_fmt_005fformatDate_005f1_reused = false;
    try {
      _jspx_th_fmt_005fformatDate_005f1.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fformatDate_005f1.setParent(null);
      // /WEB-INF/views/board/detail.jsp(22,9) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fformatDate_005f1.setValue((java.util.Date) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${bfmap.board.MODIFYDATE}", java.util.Date.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      // /WEB-INF/views/board/detail.jsp(22,9) name = pattern type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fformatDate_005f1.setPattern("yyyy-MM-dd HH:mm");
      int _jspx_eval_fmt_005fformatDate_005f1 = _jspx_th_fmt_005fformatDate_005f1.doStartTag();
      if (_jspx_th_fmt_005fformatDate_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005fpattern_005fnobody.reuse(_jspx_th_fmt_005fformatDate_005f1);
      _jspx_th_fmt_005fformatDate_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fformatDate_005f1, _jsp_getInstanceManager(), _jspx_th_fmt_005fformatDate_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /WEB-INF/views/board/detail.jsp(28,1) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${bfmap.board.REMOVEYN == 'y'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("	<textarea rows=\"5\" cols=\"10\" name=\"content\" id=\"content\">삭제된 내용 입니다.</textarea><br>\r\n");
          out.write("	파일 : \r\n");
          out.write("	");
          if (_jspx_meth_c_005fforEach_005f0(_jspx_th_c_005fif_005f0, _jspx_page_context))
            return true;
          out.write('\r');
          out.write('\n');
          out.write('	');
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f0);
      // /WEB-INF/views/board/detail.jsp(31,1) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("file");
      // /WEB-INF/views/board/detail.jsp(31,1) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/board/detail.jsp(31,1) '${bfmap.bflist}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${bfmap.bflist}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("		<img alt=\"삭제된 내용입니다.\" src=\"\" width=\"100\">\r\n");
            out.write("	");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f1_reused = false;
    try {
      _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f1.setParent(null);
      // /WEB-INF/views/board/detail.jsp(37,1) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${bfmap.board.REMOVEYN != 'y'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
      if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("	<textarea rows=\"5\" cols=\"10\" name=\"content\" id=\"content\">");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${bfmap.board.CONTENT}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</textarea><br>\r\n");
          out.write("	파일 : \r\n");
          out.write("	");
          if (_jspx_meth_c_005fforEach_005f1(_jspx_th_c_005fif_005f1, _jspx_page_context))
            return true;
          out.write('\r');
          out.write('\n');
          out.write('	');
          int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      _jspx_th_c_005fif_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f1, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f1 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f1_reused = false;
    try {
      _jspx_th_c_005fforEach_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f1);
      // /WEB-INF/views/board/detail.jsp(40,1) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setVar("file");
      // /WEB-INF/views/board/detail.jsp(40,1) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/board/detail.jsp(40,1) '${bfmap.bflist}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${bfmap.bflist}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int[] _jspx_push_body_count_c_005fforEach_005f1 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f1 = _jspx_th_c_005fforEach_005f1.doStartTag();
        if (_jspx_eval_c_005fforEach_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("		<img alt=\"사진\" src=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("/uploadimg/");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${file.filename}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\" width=\"100\">\r\n");
            out.write("	");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f1.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f1[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f1.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f1.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f1);
      _jspx_th_c_005fforEach_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f2 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f2_reused = false;
    try {
      _jspx_th_c_005fif_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f2.setParent(null);
      // /WEB-INF/views/board/detail.jsp(45,1) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f2.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${bfmap.board.USERID == sessionScope.userid}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f2 = _jspx_th_c_005fif_005f2.doStartTag();
      if (_jspx_eval_c_005fif_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("		<button id=\"btnupdateform\">수정</button>\r\n");
          out.write("		<button id=\"btndelete\">삭제</button>\r\n");
          out.write("	");
          int evalDoAfterBody = _jspx_th_c_005fif_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f2);
      _jspx_th_c_005fif_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f2_reused);
    }
    return false;
  }
}
